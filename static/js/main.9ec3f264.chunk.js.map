{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","components/Recipe/Recipe.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","Footer","Recipe","title","calories","image","ingredients","cal","Math","floor","className","src","alt","map","ingredient","index","text","App","APP_ID","process","API_KEY","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SAWeA,G,YARA,WACb,OACE,iCACE,gECKSC,G,MARA,WACb,OACE,iCACE,iECgBSC,G,MAnBA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAEjCC,EAAMC,KAAKC,MAAML,GAEvB,OACE,sBAAKM,UAAU,cAAf,UACE,6BAAKP,IACL,8BAAII,EAAJ,eACA,qBAAKI,IAAKN,EAAOO,IAAI,WACrB,6CACA,6BACGN,EAAYO,KAAI,SAACC,EAAYC,GAAb,OACf,6BAAiBD,EAAWE,MAAnBD,aC2CJE,EAnDH,WACV,IAAMC,EAAM,UAAMC,YACZC,EAAO,UAAMD,oCAFH,EAIcE,mBAAS,IAJvB,mBAITC,EAJS,KAIAC,EAJA,OAKYF,mBAAS,IALrB,mBAKTG,EALS,KAKDC,EALC,OAMUJ,mBAAS,UANnB,mBAMTK,EANS,KAMFC,EANE,KAQhBC,qBAAU,WACRC,MAEC,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAAoDR,EAApD,oBAAsEE,IADjF,cACXY,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACE,sBAAKzB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAM0B,SATQ,SAACC,GACjBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAMmBf,UAAU,cAArC,UACE,uBAAOA,UAAU,aAAa6B,KAAK,OAAOC,MAAOhB,EAAQiB,SAd1C,SAACJ,GACpBZ,EAAUY,EAAEK,OAAOF,UAcf,wBAAQ9B,UAAU,aAAa6B,KAAK,SAApC,uBAEF,qBAAK7B,UAAU,UAAf,SACGY,EAAQT,KAAI,SAAC8B,GAAD,OACX,cAAC,EAAD,CAEExC,MAAOwC,EAAOA,OAAOC,MACrBxC,SAAUuC,EAAOA,OAAOvC,SACxBC,MAAOsC,EAAOA,OAAOtC,MACrBC,YAAaqC,EAAOA,OAAOrC,aAJtBqC,EAAOA,OAAOC,YAOzB,cAAC,EAAD,QCzCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9ec3f264.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Find Your Favourite Recipe</h1>\n    </header>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>For Educational Purpose Only</p>\n    </footer>\n  )\n}\n\nexport default Footer;","import React from 'react';\nimport \"./Recipe.scss\";\n\nconst Recipe = ({title, calories, image, ingredients}) => {\n\n  const cal = Math.floor(calories);\n\n  return (\n    <div className=\"recipe-card\">\n      <h2>{title}</h2>\n      <p>{cal} calories</p>\n      <img src={image} alt=\"recipe\" />\n      <h4>Ingredients</h4>\n      <ul>\n        {ingredients.map((ingredient, index) => (\n          <li key={index}>{ingredient.text}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Recipe from \"./components/Recipe/Recipe\";\n\nconst App = () => {\n  const APP_ID = `${process.env.REACT_APP_RECIPE_APP_ID}`;\n  const API_KEY = `${process.env.REACT_APP_RECIPE_API_KEY}`;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"potato\");\n\n  useEffect(() => {\n    getRecipes();\n    // eslint-disable-next-line\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} />\n        <button className=\"search-btn\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n        {recipes.map((recipe) => (\n          <Recipe \n            key={recipe.recipe.label} \n            title={recipe.recipe.label} \n            calories={recipe.recipe.calories} \n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients} />\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}