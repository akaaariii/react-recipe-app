{"version":3,"sources":["components/Header/Header.jsx","components/Footer/Footer.jsx","assets/images/no_image.svg","components/Recipe/Recipe.jsx","components/Alert/Alert.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Header","Footer","Date","getFullYear","href","className","id","data-color","Recipe","title","calories","image","ingredients","useState","src","setSrc","cal","Math","floor","alt","onError","imageNotFound","map","ingredient","index","text","Alert","alert","App","APP_ID","process","API_KEY","recipes","setRecipes","search","setSearch","query","setQuery","setAlert","useEffect","getRecipes","a","fetch","response","json","data","more","hits","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","recipe","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAWeA,G,YARA,WACb,OACE,iCACE,gECQSC,G,MAXA,WACb,OACE,mCACE,+BAAI,IAAIC,MAAOC,cAAf,sBAAkD,uBAAlD,8BAC6B,mBAAGC,KAAK,yBAAR,uBAE7B,qBAAKC,UAAU,OAAOC,GAAG,eAAeC,aAAW,eCT1C,G,MAAA,IAA0B,sCCuB1BC,EAnBA,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAAkB,EACpCC,mBAASF,GAD2B,mBACnDG,EADmD,KAC9CC,EAD8C,KAEpDC,EAAMC,KAAKC,MAAMR,GAEvB,OACE,sBAAKL,UAAU,cAAf,UACE,6BAAKI,IACL,8BAAIO,EAAJ,eACA,qBAAKF,IAAKA,EAAKK,IAAI,SAASC,QAAS,kBAAML,EAAOM,MAClD,6CACA,6BACGT,EAAYU,KAAI,SAACC,EAAYC,GAAb,OACf,6BAAiBD,EAAWE,MAAnBD,YCLJE,G,MARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKtB,UAAU,QAAf,SACE,6BAAKsB,QC2DIC,EAzDH,WACV,IAAMC,EAAM,UAAMC,YACZC,EAAO,UAAMD,oCAFH,EAIcjB,mBAAS,IAJvB,mBAITmB,EAJS,KAIAC,EAJA,OAKYpB,mBAAS,IALrB,mBAKTqB,EALS,KAKDC,EALC,OAMUtB,mBAAS,UANnB,mBAMTuB,EANS,KAMFC,EANE,OAOUxB,mBAAS,IAPnB,mBAOTc,EAPS,KAOFW,EAPE,KAShBC,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCN,EAApC,mBAAoDP,EAApD,oBAAsEE,IADjF,cACXY,EADW,gBAEEA,EAASC,OAFX,WAEXC,EAFW,QAIRC,KAJQ,yCAKRR,EAAS,2BALD,OAOjBL,EAAWY,EAAKE,MAPC,2CAAH,qDAqBhB,OACE,sBAAK1C,UAAU,MAAf,UACE,cAAC,EAAD,IACA,uBAAM2C,SAVQ,SAACC,GACjBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,IACVG,EAAS,KAMoBjC,UAAU,cAArC,UACa,KAAVsB,GAAgB,cAAC,EAAD,CAAOA,MAAOA,IAC/B,uBAAOtB,UAAU,aAAa8C,KAAK,OAAOC,MAAOlB,EAAQmB,SAhB1C,SAACJ,GACpBd,EAAUc,EAAEK,OAAOF,QAekEG,YAAY,mCAC7F,wBAAQlD,UAAU,aAAa8C,KAAK,SAApC,uBAEF,qBAAK9C,UAAU,UAAf,SACG2B,IAAY,IAAMA,EAAQV,KAAI,SAACkC,GAAD,OAC7B,cAAC,EAAD,CAEE/C,MAAO+C,EAAOA,OAAOC,MACrB/C,SAAU8C,EAAOA,OAAO9C,SACxBC,MAAO6C,EAAOA,OAAO7C,MACrBC,YAAa4C,EAAOA,OAAO5C,aAJtB4C,EAAOA,OAAOC,YAOzB,cAAC,EAAD,QChDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ade51d29.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.scss\";\n\nconst Header = () => {\n  return (\n    <header>\n      <h1>Find Your Favourite Recipe</h1>\n    </header>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <p>{new Date().getFullYear()} &copy; Akari Tsutsui<br />\n        This product uses API from <a href=\"https://www.edamam.com\">EDAMAM</a>\n      </p>\n      <div className=\"logo\" id=\"edamam-badge\" data-color=\"light\"></div>\n    </footer>\n  )\n}\n\nexport default Footer;","export default __webpack_public_path__ + \"static/media/no_image.a372460a.svg\";","import React, { useState } from 'react';\nimport './Recipe.scss';\nimport imageNotFound from '../../assets/images/no_image.svg';\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n  const [src, setSrc] = useState(image);\n  const cal = Math.floor(calories);\n\n  return (\n    <div className=\"recipe-card\">\n      <h2>{title}</h2>\n      <p>{cal} calories</p>\n      <img src={src} alt=\"recipe\" onError={() => setSrc(imageNotFound)} />\n      <h4>Ingredients</h4>\n      <ul>\n        {ingredients.map((ingredient, index) => (\n          <li key={index}>{ingredient.text}</li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default Recipe;","import React from 'react';\nimport './Alert.scss';\n\nconst Alert = ({ alert }) => {\n  return (\n    <div className=\"alert\">\n      <h3>{alert}</h3>\n    </div>\n  )\n}\n\nexport default Alert\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport Recipe from \"./components/Recipe/Recipe\";\nimport Alert from './components/Alert/Alert';\n\nconst App = () => {\n  const APP_ID = `${process.env.REACT_APP_RECIPE_APP_ID}`;\n  const API_KEY = `${process.env.REACT_APP_RECIPE_API_KEY}`;\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\"potato\");\n  const [alert, setAlert] = useState(\"\");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${API_KEY}`);\n    const data = await response.json();\n\n    if(!data.more) {\n      return setAlert('No food with such name')\n    }\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = (e) => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n    setAlert(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <form onSubmit={getSearch} className=\"search-form\">\n        {alert !== \"\" && <Alert alert={alert} />}\n        <input className=\"search-bar\" type=\"text\" value={search} onChange={updateSearch} placeholder=\"Search Recipes (*e.g.: potato)\" />\n        <button className=\"search-btn\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipes\">\n        {recipes !== [] && recipes.map((recipe) => (\n          <Recipe \n            key={recipe.recipe.label} \n            title={recipe.recipe.label} \n            calories={recipe.recipe.calories} \n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients} />\n        ))}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}